content.bittorrent = {
multilevel:true,
prev:'intro',
next:'components',
first:'intro',
name:'Протокол BitTorrent',
id:'bittorrent',
l2:{
	intro:{
		c:
`#	Протокол BitTorrent

##	Общие сведения

/floatRight ![Лого BitTorrent](content/media/BitTorrent.png)

Протокол BitTorrent предназначен для обмена файлами по сети Интернет и реализован поверх TCP. Torrent-клиенты одновременно скачивают и раздают файлы другим клиентам. Протокол был создан Брэмом Коэном 4 апреля 2001 года. Основной принцип работы примерно совпадает с более старым протоколом eDonkey2000, но работает более эффективно. Тем не менее, сам по себе протокол не обеспечивает никакой поиск файлов, подразумевается, что информация о нем ищется во внешней сети и вносится в программу-клиент.

Основными компонентами протокола являются:

*	[BitTorrent-трекер](?components#tracker);
*	[BitTorrent-клиент](?components#client);
*	[.torrent-файл](?components#file);
*	[magnet-url](?components#magnet);
*	[DHT](?components#DHT).

BitTorrent-сеть сама по себе является частично централизованной: трекер обеспечивает быстрый поиск *сидов* (*seed* — пир, у которого искомый файл загружен полностью) и других пиров, и пусть без него сеть и может существовать некоторое время, рано или поздно она «тухнет», так как подключение новых пользователей затруднено. Исправляет данную ситуацию механизм DHT.`,
		markdown:true,
		name:'Общие сведения',
		next:'working',
		id:'intro'
	},
	
	working:{
		c:
`##	Принцип работы

### Создание торрента

Если пользователь желает поделиться каким-либо файлом (или файлами), ему необходимо с помощью торрент-клиента создать торрент-файл и выгрузить его на трекер[spoiler]Eсли пользователь преследует цель передать файл конкретному лицу, этот этап можно пропустить, достаточно просто передать файл и сообщать IP-адрес и порт. Также это не является необходимостью при использовании [DHT](?components#DHT).[/spoiler]. Все файлы объединяются в единое целое, а затем дробятся на части размером от 16 до 4096 КБ. Меньшие фрагменты означают, что если в пакете оказалась ошибка, перекачивать повторно придется меньший объем, но при этом возрастает объем торрент-файла.

---

### Объявление (*announce*)

/floatRight /zoomImages /showLabels ![Структура сети](content/media/swarm.png)

Перед началом скачивания клиент подсоединяется к трекеру по адресу, указанному в торрент-файле, сообщает ему свой адрес и хеш-сумму требуемых файлов, на что в ответ клиент получает адреса других пиров в *рое* (*swarm* — совокупность всех пиров в раздаче), скачивающих или раздающих эту же раздачу. Происходит попытка подключения к хотя бы одному из сидов. После начала скачивания, пир становится *личером* (*leecher* — пир, у которого исконная раздача имеется лишь частично).

---

### Скачивание

Как только фрагмент был скачан на компьютер личера, он тут же может быть роздан другим личерам. Специфика самого протокола BitTorrent такова, что сначала скачиваются **самые редкие** фрагменты раздачи, чтобы повысить устойчивости сети[spoiler]Тем не менее, большинство программ-клиентов имеют настраиваемую возможность наплевать на это ограничение и скачивать фрагменты по порядку. При такой загрузке, например, фильма, можно начать его просмотр, когда скачано всего лишь первые несколько мегабайт.[/spoiler]. В BitTorrent нет никаких ограничений на количество одновременных подключений, все зависит от пропускной способности сети.

При этом скачивание ведется методом «обмена», то есть симметрично и в примерно равном объеме. Пиры хранят информацию о том, какие сегменты у кого есть, и поэтому может выполняться обмен сегментами, которых нет у напарника. Если пир обнаруживает, что отдал другому клиенту слишком много, передача блокируется на некоторое время.

Следует отметить, что клиент самостоятельно контролирует целостность каждого сегмента. Для этого он использует контрольные суммы (хэш-суммы SHA1). Данная функция препятствует возникновению в сети битых сегментов и, как следствие, поврежденных файлов. В случае обнаружения ошибки, сегмент скачивается заново. Если же клиент целенаправленно засоряет сеть битыми фрагментами, он может быть заблокирован.

---

### End game

Когда скачивание почти завершено, клиент входит в особый режим, называемый *end game*. В этом режиме он запрашивает все оставшиеся сегменты у всех подключенных пиров, что позволяет избежать замедления или полного «зависания» почти завершенной закачки из-за нескольких медленных пиров (для сравнения, в обычном режиме один блок одновременно запрашивается только у одного пира). Когда блок полностью получен, всем пирам отсылается сообщение с отменой передачи данного куска.

---

### Сидирование

Как только закачка завершается, пир становится сидом, и занимается только раздачей. Чтобы стимулировать пиров поддерживать раздачи в «живом» состоянии и не «покидать» их сразу при завершении, на неанонимных трекерах ведется учет скачанного и отданного трафика.

/floatRight /zoomImages /fullGif /showLabels ![Super-seed](content/media/torrenting.png)

Для случаев, когда на раздаче имеется всего один сид с достаточно невысокой исходящей скоростью, существует неофициальный режим *Супер-сидирование* (*Super-seeding*). В этом случае сид максимально минимизирует количество исходящего трафика и передает сегменты лишь тогда, когда убеждается, что остальные пиры тоже получили этот сегмент. Таким образом, сид передает, как правило, не более 105-120% от всего объема файла.`,
		markdown:true,
		name:'Принцип работы',
		prev:'intro',
		id:'working'
	}
}
}